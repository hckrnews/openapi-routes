{"version":3,"file":"api.umd.js","sources":["../src/api.js"],"sourcesContent":["/**\n * Auto register API routes from the OpenAPI specification.\n */\nclass ApiRoutes {\n  /**\n   * Set the specification.\n   *\n   * @param {object} OpenAPISpecification\n   * @param {class} Backend\n   * @param {function} callback\n   * @param {string} root\n   */\n  constructor (OpenAPISpecification, Backend, callback, root) {\n    this.logger = null\n    this.specification = OpenAPISpecification\n    this.callback = callback\n    this.controllers = {}\n    this.api = new Backend({\n      apiRoot: root || '/',\n      definition: OpenAPISpecification\n    })\n  }\n\n  get operations () {\n    return ['get', 'put', 'patch', 'post', 'delete']\n  }\n\n  /**\n     * Set the logger.\n     *\n     * @param {class} logger\n     */\n  setLogger (logger) {\n    this.logger = logger\n  }\n\n  /**\n     * Set the controllers.\n     *\n     * @param {object} controllers\n     */\n  setControllers (controllers) {\n    if (controllers === null || controllers.constructor.name !== 'Object') {\n      throw new Error('No valid controllers found')\n    }\n\n    this.controllers = controllers\n  }\n\n  /**\n     * Get all operation ID's from the specification.\n     * @todo: allow multipleoperation methods per path (e.g. get and post)\n     *\n     * @return {array}\n     */\n  get operationIds () {\n    return Object.values(this.specification.paths).map((path) => {\n      return Object.entries(path).map(([operation, data]) =>\n        this.operations.includes(operation) ? data.operationId : null\n      )\n    }).flat()\n  }\n\n  /**\n     * Register all operations to a controller.\n     */\n  register () {\n    this.operationIds.forEach((operationId) => {\n      this.api.register(\n        operationId,\n        this.callback(\n          this.controllers[operationId],\n          this.specification,\n          this.logger\n        )\n      )\n    })\n\n    if (this.controllers?.notFound) {\n      this.api.register(\n        'notFound',\n        this.callback(\n          this.controllers.notFound,\n          this.specification,\n          this.logger\n        )\n      )\n    }\n\n    this.api.init()\n  }\n\n  authentication (secret) {\n    this.api.register(\n      'unauthorizedHandler',\n      async (context, request, response) =>\n        response.status(401).json({\n          status: 401,\n          timestamp: new Date(),\n          message: 'Unauthorized'\n        })\n    )\n    this.api.registerSecurityHandler(\n      'apiKey',\n      (context) => context.request.headers['x-api-key'] === secret\n    )\n  }\n\n  /**\n     * Create the API routes from a specification.\n     *\n     * @param {object} specification\n     * @param {string} secret\n     * @param {class} Backend\n     * @param {class} logger\n     * @param {function} callback\n     * @param {object} controllers\n     * @param {string} root\n     *\n     * @return {OpenAPIBackend}\n     */\n  static create ({\n    specification,\n    secret,\n    Backend,\n    logger,\n    callback,\n    controllers,\n    root\n  }) {\n    const apiRoutes = new ApiRoutes(specification, Backend, callback, root)\n\n    apiRoutes.setControllers(controllers)\n    if (logger) {\n      apiRoutes.setLogger(logger)\n    }\n\n    if (secret) {\n      apiRoutes.authentication(secret)\n    }\n\n    apiRoutes.register()\n\n    return apiRoutes.api\n  }\n}\n\nexport { ApiRoutes }\n"],"names":["ApiRoutes","constructor","OpenAPISpecification","Backend","callback","root","logger","specification","controllers","api","apiRoot","definition","operations","setLogger","setControllers","name","Error","operationIds","Object","values","paths","map","path","entries","operation","data","includes","operationId","flat","register","forEach","notFound","init","authentication","secret","context","request","response","status","json","timestamp","Date","message","registerSecurityHandler","headers","create","apiRoutes"],"mappings":"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"}